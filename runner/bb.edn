;   This file is part of Bob.
;
;   Bob is free software: you can redistribute it and/or modify
;   it under the terms of the GNU Affero General Public License as published by
;   the Free Software Foundation, either version 3 of the License, or
;   (at your option) any later version.
;
;   Bob is distributed in the hope that it will be useful,
;   but WITHOUT ANY WARRANTY; without even the implied warranty of
;   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
;   GNU Affero General Public License for more details.
;
;   You should have received a copy of the GNU Affero General Public License
;   along with Bob. If not, see <http://www.gnu.org/licenses/>.

{:min-bb-version "0.4.0"

 :tasks {docker-clean {:doc  "Cleans up cluster containers"
                       :task (do
                               (shell {:continue true} "docker kill bob-test-storage bob-test-queue resource-git artifact-local podman")
                               (shell {:continue true} "docker rm bob-test-storage bob-test-queue resource-git artifact-local podman")
                               (shell {:continue true} "docker network rm bob-net"))}
         test         {:doc  "Sets up the cluster and runs tests"
                       :task (do
                               (try
                                 (run 'docker-clean)
                                 (shell {:continue true} "docker network create bob-net")
                                 (shell "docker run
                                   -d
                                   --name podman
                                   --device /dev/fuse
                                   --security-opt seccomp=unconfined
                                   --security-opt apparmor=unconfined
                                   --security-opt label=disable
                                   --cap-add sys_admin
                                   --cap-add mknod
                                   -p 8080:8080
                                   quay.io/podman/stable
                                   bash -c 'dnf install -y socat && \\
                                     (podman system service -t 0 unix:///tmp/pod.sock &) && \\
                                     socat TCP-LISTEN:8080,fork UNIX-CONNECT:/tmp/pod.sock'")
                                 (shell "docker run
                                   -d
                                   --name bob-test-storage
                                   -p 5433:5432
                                   -e POSTGRES_DB=bob-test
                                   -e POSTGRES_USER=bob
                                   -e POSTGRES_PASSWORD=bob
                                   --network bob-net
                                   postgres:alpine")
                                 (shell "docker run
                                   -d
                                   --name bob-test-queue
                                   -p 5673:5672
                                   --network bob-net
                                   rabbitmq:3-alpine")
                                 (shell "docker run
                                   -d
                                   --name resource-git
                                   -p 8000:8000
                                   --network bob-net
                                   ghcr.io/bob-cd/resource-git")
                                 (shell "docker run
                                   -d
                                   --name artifact-local
                                   -p 8001:8001
                                   --network bob-net
                                   ghcr.io/bob-cd/artifact-local")
                                 (load-file "tasks/wait.clj")
                                 (shell "clojure -M:test")
                                 (finally
                                   (run 'docker-clean))))}
         compile      {:doc  "Builds the compiled aritfact"
                       :task (shell "clojure -X:uberjar")}
         image        {:doc  "Builds the docker images"
                       :task (do
                               (shell "docker build -t ghcr.io/bob-cd/runner .")
                               (shell "docker build -t ghcr.io/bob-cd/runner:self-contained -f Dockerfile.selfcontained ."))}
         push         {:doc  "Pushes the docker image"
                       :task (do
                               (shell "docker push ghcr.io/bob-cd/runner")
                               (shell "docker push ghcr.io/bob-cd/runner:self-contained"))}
         clean        {:doc  "Cleans up"
                       :task (do
                               (shell "rm -rf .cpcache runner.jar")
                               (shell {:continue true} "docker rmi ghcr.io/bob-cd/runner"))}}}
